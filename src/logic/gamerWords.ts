import { ALL_CATEGORIES } from '../data/terms';
import { CATEGORY_WORDS } from '../data/categoryWords';
import { DAILY_WORDLE_POOL } from '../data/dailyWordlePool';
import { seedHash, mulberry32 } from './rng';

export interface DailyGamerWord {
  answer: string; // 5-letter word
  dateKey: string; // YYYY-M-D (UTC)
  categoryId: string;
  categoryLabel: string;
  prompt: string; // autogenerated category style prompt
  wordLength: number;
  maxGuesses: number;
}

// Build word-to-category map from CATEGORY_WORDS
const wordToCategory: Record<string,{id:string;label:string}> = {};
for(const cat of ALL_CATEGORIES){
  const words = CATEGORY_WORDS[cat.id] || [];
  for(const w of words){
    const lower = w.toLowerCase();
    if(!wordToCategory[lower]){
      wordToCategory[lower] = { id: cat.id, label: cat.label };
    }
  }
}

export const GAMER_WORD_CANDIDATES = DAILY_WORDLE_POOL;

export const GAMER_WORD_LENGTH = 5;
export const GAMER_WORD_MAX_GUESSES = 6;

export function getDailyGamerWord(dateStr?: string): DailyGamerWord {
  const date = dateStr ? new Date(dateStr) : new Date();
  const key = date.getUTCFullYear() + '-' + (date.getUTCMonth()+1) + '-' + date.getUTCDate();
  const h = seedHash('gamerwords:' + key);
  const rand = mulberry32(h);
  const idx = Math.floor(rand() * GAMER_WORD_CANDIDATES.length);
  const answer = GAMER_WORD_CANDIDATES[idx];
  const cat = wordToCategory[answer];
  const prompt = `Category: ${cat.label}`;
  return { answer, dateKey: key, categoryId: cat.id, categoryLabel: cat.label, prompt, wordLength: GAMER_WORD_LENGTH, maxGuesses: GAMER_WORD_MAX_GUESSES };
}

export function getGamerWordForDate(key: string): DailyGamerWord {
  if(!/^\d{4}-\d{1,2}-\d{1,2}$/.test(key)) return getDailyGamerWord();
  return getDailyGamerWord(key);
}

// Endless mode: choose a random word independent of date each time.
export function getRandomGamerWord(): DailyGamerWord {
  const idx = Math.floor(Math.random() * GAMER_WORD_CANDIDATES.length);
  const answer = GAMER_WORD_CANDIDATES[idx];
  const cat = wordToCategory[answer];
  const prompt = `Category: ${cat.label}`;
  return { answer, dateKey: 'endless-' + Date.now(), categoryId: cat.id, categoryLabel: cat.label, prompt, wordLength: GAMER_WORD_LENGTH, maxGuesses: GAMER_WORD_MAX_GUESSES };
}